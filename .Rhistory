load("C:/My House/Bootcamp/15_Statistics/R_Notebook/Day-01/01_Ins_RBasics/Solved/.RData")
demo()
image()
load("C:/My House/Bootcamp/15_Statistics/R_Analysis/01_Demo/.RData")
load("C:/My House/Bootcamp/15_Statistics/R_Notebook/Day-01/01_Ins_RBasics/Solved/.RData")
load("C:/My House/Bootcamp/15_Statistics/R_Notebook/Day-01/01_Ins_RBasics/Solved/.RData")
load("C:/My House/Bootcamp/15_Statistics/R_Notebook/Day-01/01_Ins_RBasics/Solved/.RData")
load("C:/My House/Bootcamp/15_Statistics/R_Notebook/Day-01/01_Ins_RBasics/Solved/.RData")
setwd("~/")
# Generate some fake data to test with
set.seed(42)
population1 = rnorm(1000)
population2 = sample(population1, 200)
t.test(population2, mu=mean(population1))
# Generate data with a bigger difference in means
population3 = rnorm(1000, -2)
t.test(population2, mu=mean(population3))
sardines <- read.csv(file="03-Stu_Sardines/Resources/sardines.csv")
# Calculate the population mean for Sardine Vertebrae in Alaska.
# Hint: use the subset() function to get only the data for Alaska.
population1 = subset(sardines, location == 1)
mean(population1[['vertebrae']])
# Calculate the population mean for Sardine Vertebrae in San Diego.
# Hint: use the subset() function to get only the data for San Diego.
population2 = subset(sardines, location == 6)
mean(population2[['vertebrae']])
# Calculate Independent (Two Sample) T-Test
t.test(population1[['vertebrae']], population2[['vertebrae']])
sardines <- read.csv(file="03-Stu_Sardines/Resources/sardines.csv")
sardines <- read.csv(file="../03-Stu_Sardines/Resources/sardines.csv")
population1 = subset(sardines, location == 1)
mean(population1[['vertebrae']])
# Calculate the population mean for Sardine Vertebrae in San Diego.
# Hint: use the subset() function to get only the data for San Diego.
population2 = subset(sardines, location == 6)
mean(population2[['vertebrae']])
# Calculate Independent (Two Sample) T-Test
t.test(population1[['vertebrae']], population2[['vertebrae']])
sardines <- read.csv(file="../03-Stu_Sardines/Resources/sardines.csv")
sardines <- read.csv(file="/03-Stu_Sardines/Resources/sardines.csv")
sardines <- read.csv(file="C:/my house/bootcamp/15_statistics/r_notebook/day-2/03-Stu_Sardines/Resources/sardines.csv")
sardines <- read.csv(file="03-Stu_Sardines/Resources/sardines.csv")
library(tidyverse)
mosquito <- read.csv(file="04-Ins_ANOVA/Resources/mosquito.csv")
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
library(tidyverse)
f <- file.choose
mosquito <- read.csv(f)
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
library(tidyverse)
f <- file.choose
mosquito <- read.csv(f)
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
library(tidyverse)
f <- file.choose()
mosquito <- read.csv(f)
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
library(tidyverse)
f <- file.choose()
mosquito <- read.csv(f)
mosquito
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
library(tidyverse)
f <- file.choose(mosuito.csv)
mosquito <- read.csv(f)
mosquito
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
library(tidyverse)
f <- file.choose(mosquito.csv)
mosquito <- read.csv(f)
mosquito
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
f <- file.choose()
mosquito <- read.csv(f)
mosquito
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
f <- file.choose()
print f
mosquito <- read.csv(f)
mosquito
f <- file.choose()
print f
mosquito <- read.csv(f)
library(tidyverse)
f <- file.choose()
print f
mosquito <- read.csv(f)
library(tidyverse)
f <- file.choose()
mosquito <- read.csv(f)
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
library(tidyverse)
f <- file.choose()
mosquito <- read.csv(f)
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
library(tidyverse)
f <- file.choose()
mosquito <- read.csv(f)
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
library(tidyverse)
f <- file.choose()
mosquito <- read.csv(f)
ggplot(mosquito,aes(x=factor(treatment),y=mosq)) + geom_boxplot()
# aov performs the analysis of variance, but does not provide a p-value
aov(mosq ~ factor(treatment), data=mosquito)
# to obtain a p-value, wrap aov() with a summary() function
summary(aov(mosq ~ factor(treatment), data=mosquito))
# Read in the CSV file.
hair <- read.csv(file="05-Stu_ANOVA/Resources/hair.csv")
# Read in the CSV file.
f <- file.choose()
hair <- read.csv(f)
# Plot the data using ggplot
ggplot(hair,aes(x=HairColour,y=Pain)) + geom_boxplot()
# Determine the p-value using ANOVA
summary(aov(Pain ~ HairColour, data=hair))
# Read in the CSV file.
f <- file.choose()
hair <- read.csv(f)
# Plot the data using ggplot
ggplot(hair,aes(x=HairColour,y=Pain)) + geom_boxplot()
# Determine the p-value using ANOVA
summary(aov(Pain ~ HairColour, data=hair))
# Read in the CSV file.
f <- file.choose()
hair <- read.csv(f)
# Plot the data using ggplot
ggplot(hair,aes(x=HairColour,y=Pain)) + geom_boxplot()
# Determine the p-value using ANOVA
summary(aov(Pain ~ HairColour, data=hair))
f <-file.choose()
diabetes <- read.csv(f)
# Plot a scatter plot of bp vs. one year disease progression
ggplot(diabetes, aes(bp, One_Year_Disease_Progress)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
# Perform linear regression
reg <- lm(One_Year_Disease_Progress ~ bp, data=diabetes)
summary(reg)
# Get the r-sqaured value.
summary(reg)$r.squared
# 0.194908
#DELIVERABLE 1
library(dplyr)
MechaCar_df <- read.csv(file = 'mechacar_mpg.csv',check.names = F, stringsAsFactors = F)
lm(vehicle_length ~ mpg,MechaCar_df)
summary(lm(vehicle_length ~ mpg,MechaCar_df))
# DELIVERABLE 2
MechaCar_tbl <- read.csv(file = 'suspension_coil.csv',check.names = F, stringsAsFactors = F)
summary_table <- MechaCar_tbl %>% summarize(Mean_PSI=mean(PSI), Median_PSI=median(PSI), Var_PSI=var(PSI), Stdev_PSI=sd(PSI), .groups = 'keep') #create summary table
lot_summary <- MechaCar_tbl  %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI), Median_PSI=median(PSI), Var_PSI=var(PSI), Stdev_PSI=sd(PSI), .groups = 'keep') #create lot summary table
# DELIVERABLE 3
t.test(lot_summary$Mean_PSI, mu=1500)
t.test(MechaCar_tbl$PSI, mu=1500)
Lot_1 <- subset(MechaCar_tbl, Manufacturing_Lot = "Lot1")
Lot_2 <- subset(MechaCar_tbl, Manufacturing_Lot = "Lot2")
Lot_3 <- subset(MechaCar_tbl, Manufacturing_Lot = "Lot3")
t.test(Lot_1$PSI, mu=1500)
t.test(Lot_2$PSI, mu=1500)
t.test(Lot_2$PSI, mu=1500)
library(dplyr)
MechaCar_df <- read.csv(file = 'mechacar_mpg.csv',check.names = F, stringsAsFactors = F)
lm(vehicle_length ~ mpg,MechaCar_df)
summary(lm(vehicle_length ~ mpg,MechaCar_df))
# DELIVERABLE 2
MechaCar_tbl <- read.csv(file = 'suspension_coil.csv',check.names = F, stringsAsFactors = F)
summary_table <- MechaCar_tbl %>% summarize(Mean_PSI=mean(PSI), Median_PSI=median(PSI), Var_PSI=var(PSI), Stdev_PSI=sd(PSI), .groups = 'keep') #create summary table
lot_summary <- MechaCar_tbl  %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI), Median_PSI=median(PSI), Var_PSI=var(PSI), Stdev_PSI=sd(PSI), .groups = 'keep') #create lot summary table
library(dplyr)
MechaCar_df <- read.csv(file = 'mechacar_mpg.csv',check.names = F, stringsAsFactors = F)
MechaCar_df <- read.csv(file = 'mechacar_mpg.csv',check.names = F, stringsAsFactors = F)
summary(lm(vehicle_length ~ mpg,MechaCar_df))
MechaCar_df <- read.csv(file = 'mechacar_mpg.csv',check.names = F, stringsAsFactors = F)
MechaCar_df <- read.csv(file = 'MechaCar_mpg.csv',check.names = F, stringsAsFactors = F)
setwd("C:/My House/Bootcamp/15_Statistics/MechaCar_Statistical_Analysis")
#DELIVERABLE 1
library(dplyr)
MechaCar_df <- read.csv(file = 'MechaCar_mpg.csv',check.names = F, stringsAsFactors = F)
lm(vehicle_length ~ mpg,MechaCar_df)
summary(lm(vehicle_length ~ mpg,MechaCar_df))
# DELIVERABLE 2
MechaCar_tbl <- read.csv(file = 'suspension_coil.csv',check.names = F, stringsAsFactors = F)
summary_table <- MechaCar_tbl %>% summarize(Mean_PSI=mean(PSI), Median_PSI=median(PSI), Var_PSI=var(PSI), Stdev_PSI=sd(PSI), .groups = 'keep') #create summary table
lot_summary <- MechaCar_tbl  %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI), Median_PSI=median(PSI), Var_PSI=var(PSI), Stdev_PSI=sd(PSI), .groups = 'keep') #create lot summary table
# DELIVERABLE 3
t.test(lot_summary$Mean_PSI, mu=1500)
t.test(MechaCar_tbl$PSI, mu=1500)
Lot_1 <- subset(MechaCar_tbl, Manufacturing_Lot = "Lot1")
Lot_2 <- subset(MechaCar_tbl, Manufacturing_Lot = "Lot2")
Lot_3 <- subset(MechaCar_tbl, Manufacturing_Lot = "Lot3")
t.test(Lot_1$PSI, mu=1500)
t.test(Lot_2$PSI, mu=1500)
t.test(Lot_2$PSI, mu=1500)
save.image("C:/My House/Bootcamp/15_Statistics/MechaCar_Statistical_Analysis/workspace_1.RData")
